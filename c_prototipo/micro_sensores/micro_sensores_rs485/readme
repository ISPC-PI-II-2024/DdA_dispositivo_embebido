üì° Micro-sensores RS485 - ESP8266 + AHT10
üìã Descripci√≥n del Proyecto
Sistema de monitoreo de sensores ambientales usando ESP8266 como dispositivo esclavo RS485. Cada m√≥dulo lee temperatura y humedad del sensor AHT10 y responde a comandos via protocolo RS485 personalizado.

üèóÔ∏è Arquitectura del Sistema

[ESP8266 + AHT10] ‚Üí (RS485) ‚Üí [ESP32-C3 Endpoint] ‚Üí (LoRa) ‚Üí [Gateway] ‚Üí (MQTT/WebSockets) ‚Üí [Backend]

‚öôÔ∏è Configuraci√≥n T√©cnica
üìå Hardware Requerido
Microcontrolador: ESP8266 (NodeMCU v2)

Sensor: AHT10 (Temperatura y Humedad)

Comunicaci√≥n: M√≥dulo MAX485 para RS485

Alimentaci√≥n: 3.3V

üîå Diagrama de Conexiones
AHT10 (Sensor)
Pin AHT10	Pin ESP8266
VCC	3.3V
GND	GND
SDA	GPIO4 (D2)
SCL	GPIO5 (D1)
MAX485 (RS485)
Pin MAX485	Pin ESP8266
RO	GPIO13 (D7)
DI	GPIO12 (D6)
DE/RE	GPIO14 (D5)
VCC	3.3V
GND	GND
üöÄ Instalaci√≥n y Configuraci√≥n
1. Requisitos Previos
PlatformIO IDE (VS Code)

Librer√≠a Adafruit AHTX0


2. Configuraci√≥n PlatformIO

[env:nodemcuv2]
platform = espressif8266
board = nodemcuv2
framework = arduino
monitor_speed = 115200
upload_speed = 921600

lib_deps =
    adafruit/Adafruit AHTX0

build_flags =
    -Wl,-Teagle.flash.4m3m.ld
    -D PIO_FRAMEWORK_ARDUINO_MMU_CACHE16_IRAM48_SECHEAP_SHARED


    3. Configuraci√≥n del Dispositivo

    // üîß CONFIGURAR POR CADA DISPOSITIVO
#define MY_ADDRESS 0x01              // Direcci√≥n √∫nica (1-32)
#define DEVICE_TYPE "AHT10_SENSOR"   // Tipo de dispositivo  
#define DEVICE_LOCATION "Silo_Norte" // Ubicaci√≥n f√≠sica


// üîß CONFIGURAR POR CADA DISPOSITIVO
#define MY_ADDRESS 0x01              // Direcci√≥n √∫nica (1-32)
#define DEVICE_TYPE "AHT10_SENSOR"   // Tipo de dispositivo  
#define DEVICE_LOCATION "Silo_Norte" // Ubicaci√≥n f√≠sica

ADDR:[DIRECCI√ìN]|CMD:[COMANDO]|[DATOS]|CRC:[CHECKSUM]

Comandos Disponibles
üéØ DISCOVERY - Identificaci√≥n
Request:
ADDR:BROADCAST|CMD:DISCOVERY|CRC:XXXX

Response:
ADDR:01|CMD:DISCOVERY_RESP|TYPE:AHT10_SENSOR|LOC:Silo_Norte|STATUS:READY|TEMP:25.5|HUM:60.2|CRC:ABCD

üå°Ô∏è READ_SENSOR - Lectura
Request:
ADDR:01|CMD:READ_SENSOR|CRC:XXXX

Response:
ADDR:01|CMD:SENSOR_DATA|TEMP:25.5|HUM:60.2|UNIT_TEMP:C|UNIT_HUM:%|TIMESTAMP:123456789|CRC:ABCD

üìä STATUS - Estado
Request:
ADDR:01|CMD:STATUS|CRC:XXXX

Response:
ADDR:01|CMD:STATUS_RESP|SENSOR_ACTIVE:YES|LAST_READ:123456|UPTIME:3600s|RSSI:-45dBm|CRC:ABCD

‚öôÔ∏è CONFIG - Configuraci√≥n
Request:
ADDR:01|CMD:CONFIG|PARAM:VALUE|CRC:XXXX

Response:
ADDR:01|CMD:CONFIG_ACK|STATUS:OK|CRC:ABCD

üîÑ Comportamiento del Sistema
Ciclo de Operaci√≥n
Inicializaci√≥n: Verifica sensor y configura RS485

Escucha Continua: Espera comandos del maestro RS485

Heartbeat Autom√°tico: Env√≠a estado cada 30 segundos

Lectura Local: Monitorea sensor cada 5 segundos (solo para debug)

Estados del Dispositivo
BOOTING: Inicializaci√≥n del sistema

READY: Sensor activo y funcionando

SENSOR_ERROR: Fallo en la lectura del sensor

COMM_ERROR: Problemas de comunicaci√≥n

üõ†Ô∏è Funciones Principales
procesarComando(String comando)
Analiza y ejecuta comandos recibidos

Valida direcci√≥n del dispositivo

Genera respuestas estructuradas

enviarRS485(String mensaje)
Controla pines DE/RE del MAX485

Agrega checksum CRC autom√°ticamente

Maneja temporizaci√≥n de transmisi√≥n

leerSensor()
Lee temperatura y humedad del AHT10

Maneja errores de comunicaci√≥n I2C

Actualiza variables globales

üêõ Soluci√≥n de Problemas
Error de Compilaci√≥n
Si hay errores con la librer√≠a AHTX0, usar:

lib_deps = adafruit/Adafruit AHTX0 @ ^1.1.2

Sensor No Detectado
Verificar conexiones I2C (SDA/SCL)

Confirmar alimentaci√≥n 3.3V

Revisar direcciones I2C con scanner

Comunicaci√≥n RS485
Verificar pines RO/DI/DE-RE

Confirmar velocidad 9600 bauds

Revisar terminaci√≥n de bus y tierra

üìä Monitoreo y Debug
Salida Serial
El dispositivo env√≠a informaci√≥n detallada por Serial (115200 bauds):

Estado de inicializaci√≥n

Comandos recibidos/enviados

Lecturas de sensores

Heartbeats autom√°ticos

LEDs de Estado (Opcional)
Se pueden agregar LEDs para indicar:

Verde: Sensor activo

Amarillo: Transmisi√≥n RS485

Rojo: Error/Reconexi√≥n

üîÑ Pr√≥ximos Pasos
Implementar Endpoint ESP32-C3 (Maestro RS485)

Configurar comunicaci√≥n LoRa al Gateway

Desarrollar protocolo MQTT/WebSockets para backend

Implementar sistema de configuraci√≥n remota

üìù Notas Importantes
Cada dispositivo debe tener direcci√≥n √∫nica (0x01-0x20)

El bus RS485 requiere terminaci√≥n en ambos extremos

Considerar distancia m√°xima del bus RS485 (1200m te√≥ricos)

Implementar timeout en comunicaciones para robustez

üë• Contribuci√≥n
Este proyecto es parte del sistema de monitoreo de silos desarrollado para la Tecnicatura en Telecomunicaciones.

üîÑ Estado del Proyecto: ‚úÖ Compilado y Funcional



